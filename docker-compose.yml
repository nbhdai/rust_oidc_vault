version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres-dev
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: aicldb
      POSTGRES_MULTIPLE_DATABASES: "keycloak:keycloak_user:keycloak_password"
    ports:
      - "5432:5432"
    volumes:
      - ./.data/postgres:/var/lib/postgresql/data
      - ./setups/init-multiple-dbs.sh:/docker-entrypoint-initdb.d/init-multiple-dbs.sh:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U username -d aicldb"]
      interval: 5s
      timeout: 5s
      retries: 5

  keycloak:
    image: keycloak/keycloak:26.1
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak_user
      KC_DB_PASSWORD: keycloak_password
      KEYCLOAK_ADMIN: root
      KEYCLOAK_ADMIN_PASSWORD: root
      KC_HEALTH_ENABLED: true
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    command: ["start-dev"]

  wait-for-keycloak:
    image: curlimages/curl:latest
    depends_on:
      - keycloak
    command: >
      sh -c "
        until curl -s --fail http://keycloak:8080/realms/master || curl -s --fail http://keycloak:8080/auth/realms/master;
        do
          echo 'Waiting for Keycloak to be fully initialized...';
          sleep 5;
        done;
        echo 'Keycloak is up and running!'
      "

  vault:
    image: hashicorp/vault:1.18
    container_name: vault
    ports:
      - "8200:8200"
      - "8250:8250"
    cap_add:
      - IPC_LOCK
    entrypoint: vault server -dev -dev-root-token-id="myroot" -dev-listen-address="0.0.0.0:8200"
    depends_on:
      wait-for-keycloak:
        condition: service_completed_successfully
   
  terraform:
    build:
      context: ./terraform
      dockerfile: Dockerfile
    container_name: terraform
    depends_on:
      - keycloak
      - vault

volumes:
  postgres-data:
    driver: local